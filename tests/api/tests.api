public abstract interface class io/data2viz/test/ExecutionContext {
}

public abstract interface annotation class io/data2viz/test/JsName : java/lang/annotation/Annotation {
	public abstract fun name ()Ljava/lang/String;
}

public abstract class io/data2viz/test/TestBase : io/data2viz/test/matchers/Matchers {
	public fun <init> ()V
	public fun exactly (D)Lio/data2viz/test/matchers/Matcher;
	public fun fail (Ljava/lang/String;)Ljava/lang/Void;
	public final fun getRegex ()Lkotlin/text/Regex;
	public final fun getTests ()Ljava/util/List;
	public fun plusOrMinus (DD)Lio/data2viz/test/matchers/ToleranceMatcher;
	public final fun round (Ljava/lang/String;)Ljava/lang/String;
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/Matcher;)V
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/be;)Lio/data2viz/test/matchers/BeWrapper;
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/contain;)Lio/data2viz/test/matchers/ContainWrapper;
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/end;)Lio/data2viz/test/matchers/EndWrapper;
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/have;)Lio/data2viz/test/matchers/HaveWrapper;
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/include;)Lio/data2viz/test/matchers/IncludeWrapper;
	public fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/start;)Lio/data2viz/test/matchers/StartWrapper;
	public fun should (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
	public fun shouldBe (DD)V
	public fun shouldBe (Ljava/lang/Iterable;Ljava/lang/Iterable;)V
	public fun shouldBe (Ljava/lang/Object;Ljava/lang/Object;)V
	public fun shouldBe ([D[D)V
	public fun shouldBe ([Ljava/lang/Double;[Ljava/lang/Double;)V
	public fun shouldBe ([Ljava/lang/Integer;[Ljava/lang/Integer;)V
	public fun shouldBeClose (DD)V
	public fun shouldBeClose (FF)V
	public fun shouldBeClose ([D[D)V
	public fun shouldBeClose ([Ljava/lang/Double;[Ljava/lang/Double;)V
	public fun shouldEqual (Ljava/lang/Object;Ljava/lang/Object;)V
}

public final class io/data2viz/test/TestCase {
	public fun <init> (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
	public final fun execute (Lio/data2viz/test/ExecutionContext;)Lio/data2viz/test/TestResult;
	public final fun getName ()Ljava/lang/String;
	public final fun getTest ()Lkotlin/jvm/functions/Function1;
	public final fun setName (Ljava/lang/String;)V
}

public abstract class io/data2viz/test/TestResult {
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getName ()Ljava/lang/String;
}

public final class io/data2viz/test/TestResult$KO : io/data2viz/test/TestResult {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public final fun getMessage ()Ljava/lang/String;
}

public final class io/data2viz/test/TestResult$OK : io/data2viz/test/TestResult {
	public fun <init> (Ljava/lang/String;)V
}

public final class io/data2viz/test/ToFixedKt {
	public static final fun toFixed (D)Ljava/lang/String;
}

public final class io/data2viz/test/matchers/BeWrapper {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class io/data2viz/test/matchers/ContainWrapper {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public abstract interface class io/data2viz/test/matchers/DoubleMatchers {
	public abstract fun exactly (D)Lio/data2viz/test/matchers/Matcher;
	public abstract fun plusOrMinus (DD)Lio/data2viz/test/matchers/ToleranceMatcher;
}

public final class io/data2viz/test/matchers/DoubleMatchers$DefaultImpls {
	public static fun exactly (Lio/data2viz/test/matchers/DoubleMatchers;D)Lio/data2viz/test/matchers/Matcher;
	public static fun plusOrMinus (Lio/data2viz/test/matchers/DoubleMatchers;DD)Lio/data2viz/test/matchers/ToleranceMatcher;
}

public final class io/data2viz/test/matchers/EndWrapper {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class io/data2viz/test/matchers/HaveWrapper {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class io/data2viz/test/matchers/IncludeWrapper {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public abstract interface class io/data2viz/test/matchers/Keyword {
}

public abstract interface class io/data2viz/test/matchers/Matcher {
	public abstract fun test (Ljava/lang/Object;)V
}

public abstract interface class io/data2viz/test/matchers/Matchers : io/data2viz/test/matchers/DoubleMatchers {
	public abstract fun fail (Ljava/lang/String;)Ljava/lang/Void;
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/Matcher;)V
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/be;)Lio/data2viz/test/matchers/BeWrapper;
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/contain;)Lio/data2viz/test/matchers/ContainWrapper;
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/end;)Lio/data2viz/test/matchers/EndWrapper;
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/have;)Lio/data2viz/test/matchers/HaveWrapper;
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/include;)Lio/data2viz/test/matchers/IncludeWrapper;
	public abstract fun should (Ljava/lang/Object;Lio/data2viz/test/matchers/start;)Lio/data2viz/test/matchers/StartWrapper;
	public abstract fun should (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
	public abstract fun shouldBe (DD)V
	public abstract fun shouldBe (Ljava/lang/Iterable;Ljava/lang/Iterable;)V
	public abstract fun shouldBe (Ljava/lang/Object;Ljava/lang/Object;)V
	public abstract fun shouldBe ([D[D)V
	public abstract fun shouldBe ([Ljava/lang/Double;[Ljava/lang/Double;)V
	public abstract fun shouldBe ([Ljava/lang/Integer;[Ljava/lang/Integer;)V
	public abstract fun shouldBeClose (DD)V
	public abstract fun shouldBeClose (FF)V
	public abstract fun shouldBeClose ([D[D)V
	public abstract fun shouldBeClose ([Ljava/lang/Double;[Ljava/lang/Double;)V
	public abstract fun shouldEqual (Ljava/lang/Object;Ljava/lang/Object;)V
}

public final class io/data2viz/test/matchers/Matchers$DefaultImpls {
	public static fun exactly (Lio/data2viz/test/matchers/Matchers;D)Lio/data2viz/test/matchers/Matcher;
	public static fun fail (Lio/data2viz/test/matchers/Matchers;Ljava/lang/String;)Ljava/lang/Void;
	public static fun plusOrMinus (Lio/data2viz/test/matchers/Matchers;DD)Lio/data2viz/test/matchers/ToleranceMatcher;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/Matcher;)V
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/be;)Lio/data2viz/test/matchers/BeWrapper;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/contain;)Lio/data2viz/test/matchers/ContainWrapper;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/end;)Lio/data2viz/test/matchers/EndWrapper;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/have;)Lio/data2viz/test/matchers/HaveWrapper;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/include;)Lio/data2viz/test/matchers/IncludeWrapper;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lio/data2viz/test/matchers/start;)Lio/data2viz/test/matchers/StartWrapper;
	public static fun should (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V
	public static fun shouldBe (Lio/data2viz/test/matchers/Matchers;DD)V
	public static fun shouldBe (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Iterable;Ljava/lang/Iterable;)V
	public static fun shouldBe (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Ljava/lang/Object;)V
	public static fun shouldBe (Lio/data2viz/test/matchers/Matchers;[D[D)V
	public static fun shouldBe (Lio/data2viz/test/matchers/Matchers;[Ljava/lang/Double;[Ljava/lang/Double;)V
	public static fun shouldBe (Lio/data2viz/test/matchers/Matchers;[Ljava/lang/Integer;[Ljava/lang/Integer;)V
	public static fun shouldBeClose (Lio/data2viz/test/matchers/Matchers;DD)V
	public static fun shouldBeClose (Lio/data2viz/test/matchers/Matchers;FF)V
	public static fun shouldBeClose (Lio/data2viz/test/matchers/Matchers;[D[D)V
	public static fun shouldBeClose (Lio/data2viz/test/matchers/Matchers;[Ljava/lang/Double;[Ljava/lang/Double;)V
	public static fun shouldEqual (Lio/data2viz/test/matchers/Matchers;Ljava/lang/Object;Ljava/lang/Object;)V
}

public final class io/data2viz/test/matchers/StartWrapper {
	public fun <init> (Ljava/lang/Object;)V
	public final fun getValue ()Ljava/lang/Object;
}

public final class io/data2viz/test/matchers/ToleranceMatcher : io/data2viz/test/matchers/Matcher {
	public fun <init> (DD)V
	public final fun getExpected ()D
	public final fun getTolerance ()D
	public final fun plusOrMinus (D)Lio/data2viz/test/matchers/ToleranceMatcher;
	public fun test (D)V
	public synthetic fun test (Ljava/lang/Object;)V
}

public final class io/data2viz/test/matchers/be : io/data2viz/test/matchers/Keyword {
	public static final field INSTANCE Lio/data2viz/test/matchers/be;
}

public final class io/data2viz/test/matchers/contain : io/data2viz/test/matchers/Keyword {
	public static final field INSTANCE Lio/data2viz/test/matchers/contain;
}

public final class io/data2viz/test/matchers/end : io/data2viz/test/matchers/Keyword {
	public static final field INSTANCE Lio/data2viz/test/matchers/end;
}

public final class io/data2viz/test/matchers/have : io/data2viz/test/matchers/Keyword {
	public static final field INSTANCE Lio/data2viz/test/matchers/have;
}

public final class io/data2viz/test/matchers/include : io/data2viz/test/matchers/Keyword {
	public static final field INSTANCE Lio/data2viz/test/matchers/include;
}

public final class io/data2viz/test/matchers/start : io/data2viz/test/matchers/Keyword {
	public static final field INSTANCE Lio/data2viz/test/matchers/start;
}

public final class io/data2viz/test/namespace {
	public static final field Companion Lio/data2viz/test/namespace$Companion;
	public fun <init> ()V
}

public final class io/data2viz/test/namespace$Companion {
	public final fun getSvg ()Ljava/lang/String;
}

